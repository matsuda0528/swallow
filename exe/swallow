#! /usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path("../lib", __dir__)
require "swallow"
require "optparse"
require "pry"

module Swallow
  option={:output => 'auk'}
  OptionParser.new do |opt|
    opt.on('--output=[VALUE]', ['auk', 'html', 'csv'] ,'auk | html | csv (default: auk)'){|v| option[:output] = v}
    opt.parse!(ARGV)
  end

  # AUK Parser
  parser = AUKParser.new
  parser.parse File.read(ARGV[0]) if ARGV[0]
  ast = parser.ast

  # SAT Encoder
  ptable = PropTable.new(ast)
  formula = ast.to_cnf(ptable)

  # Solving
  solver = Ravensat::Solver.new("minisat")
  solver.solve formula

  ptable.select { |i| i.value.value }.each do |e|
    domain = Domain.new
    domain.add([e.room.name], :rooms)
    domain.add([e.instructor.name], :instructors)
    domain.add([e.period.name], :period)

    e.lecture.domain = domain
  end

  # AUK Generator
  case option[:output]
  when 'auk' then puts ast.to_auk
  when 'html' then puts ast.to_html
  when 'csv' then puts ast.to_csv
  end
end
